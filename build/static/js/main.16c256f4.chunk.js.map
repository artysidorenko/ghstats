{"version":3,"sources":["utils/d3helpers.js","components/visualisations/LineGraph.js","components/queries/MonthlyNewRepos.js","components/visualisations/TreeMap.js","components/queries/Languages.js","components/App.js","history.js","auth/auth0-variables.js","auth/Auth.js","serviceWorker.js","index.js"],"names":["monthArray","parseMonth","datapoint","Date","parseInt","concat","slice","indexOf","LineGraph","react_default","a","createElement","className","style","position","console","log","this","props","data","drawGraph","prevProps","removeGraph","d3","remove","dataObject","dataArray","Object","entries","margin","window","innerWidth","top","right","bottom","left","height","width","_generateScales","dataField","xScale","domain","length","range","yScale","d","generateScales","_generateAxes","xAxis","yAxis","generateAxes","svg","append","attr","call","selectAll","datum","x","y","generateLine","enter","repositoryCount","on","i","html","toUpperCase","text","Component","NewRepos","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","handleChangeFromMonth","event","setState","fromMonth","target","value","handleChangeFromYear","fromYear","handleChangeToMonth","toMonth","handleChangeToYear","toYear","handleChangeLanguage","language","handleSubmit","preventDefault","submit","state","onSubmit","onChange","monthsWord","map","elem","index","key","years","placeholder","type","disabled","keyReceived","react_apollo_esm","query","NEW_REPOS_QUERY","_ref","loading","error","toString","rateLimit","cost","remaining","resetAt","visualisations_LineGraph","monthsDigit","from","to","gql","_templateObject","generateMonths","output","current","limit","addMonthNode","month","year","TreeMap","name","totalCount","ALL","languageCount","reduce","total","push","dataHierarchy","children","root","sum","sort","b","size","paddingOuter","paddingInner","treemapLayout","color","leaves","e","node","x0","y0","handleMouseOver","handleMouseOut","x1","y1","pageX","pageY","transition","duration","Languages","handleChangeMonth","handleChangeYear","LANGUAGE_REPOS_QUERY","visualisations_TreeMap","languages","period","Languages_templateObject","addLanguageNode","replace","App","handleAuthentication","location","test","hash","auth","authResult","getAPIToken","idToken","body","setToken","jwt","callback","require","request","method","url","headers","authorization","response","Error","login","logout","_this2","renewSession","localStorage","getItem","history","authCheck","isAuthenticated","id","onClick","bind","MonthlyNewRepos","queries_Languages","createBrowserHistory","AUTH_CONFIG","clientId","Auth","auth0","WebAuth","clientID","responseType","redirectUri","callbackUrl","scope","getAccessToken","getIdToken","authorize","parseHash","err","accessToken","setSession","alert","setItem","expiresAt","expiresIn","getTime","checkSession","error_description","removeItem","Boolean","hostname","match","httpLink","createHttpLink","uri","token","authLink","setContext","_","objectSpread","client","ApolloClient","link","cache","InMemoryCache","ReactDOM","render","components_App","githubAccess","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.16c256f4.chunk.js","sourcesContent":["import * as d3 from \"d3\";\n\nconst monthArray = ['jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec']\n\nexport function parseMonth (monthArray, datapoint) {\n  return new Date(parseInt(`20${datapoint.slice(3)}`), monthArray.indexOf(datapoint.slice(0, 3)), 1)\n}\n\nexport function generateScales (dataArray, dataField, height, width) {\n  // console.log(dataArray[0][0])\n  // console.log(dataArray[dataArray.length - 1][0])\n  // console.log(parseMonth(monthArray, dataArray[0][0]))\n  // console.log(parseMonth(monthArray, dataArray[dataArray.length - 1][0]))\n  const xScale = d3.scaleTime()\n    .domain([\n      parseMonth(monthArray, dataArray[0][0]),\n      parseMonth(monthArray, dataArray[dataArray.length-1][0])\n    ])\n    .range([0, width])\n  const yScale = d3.scaleLinear()\n    .domain([\n      d3.min(dataArray, (d) => d[1][dataField]) * 0.95,\n      d3.max(dataArray, (d) => d[1][dataField]) * 1.05\n    ])\n    .range([height, 0]);\n  return { xScale, yScale }\n}\n\nexport function generateAxes (xScale, yScale) {\n  const xAxis = d3.axisBottom(xScale)\n  const yAxis = d3.axisLeft(yScale)\n  return { xAxis, yAxis }\n}\n\nexport function generateLine (dataField, xScale, yScale, monthArray) {\n  const line = d3.line()\n    .x((d) => xScale(parseMonth(monthArray, d[0])))\n    .y((d) => yScale(d[1][dataField]))\n  return line\n}\n\n// note: target cannot be a variable/object in node/React where there is no window.document context\nexport function generateContainer (target, position, className) {\n  d3.select(target)\n    .append('g')\n    .attr('x', position.left)\n    .attr('y', position.top)\n    .attr('class', className)\n}\n\nexport function generateText (target, position, text, className) {\n  d3.select(target)\n    .append('text')\n    .attr('x', position.left)\n    .attr('y', position.top)\n    .text(text)\n    .attr('class', className)\n}\n\nexport function generateRect (target, position, dimensions, color, className) {\n  d3.select(target)\n    .append('rect')\n    .attr('x', position.left)\n    .attr('y', position.top)\n    .attr('width', dimensions.width)\n    .attr('height', dimensions.height)\n    .attr('fill', color.fill)\n    .attr('stroke', color.border)\n    .attr('class', className)\n}","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\n// import { isMobile } from 'react-device-detect';\nimport { generateScales, generateAxes, generateLine, parseMonth, generateContainer, generateText, generateRect } from \"../../utils/d3helpers\"\n\nconst monthArray = ['jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec']\n\nclass LineGraph extends Component {\n\n  render() {\n    return <div className=\"LineGraph__container\" style={{position: 'relative'}}></div>\n  }\n  componentDidMount() {\n    console.log('mounted')\n    if (this.props.data) this.drawGraph(this.props.data)\n  }\n  componentDidUpdate(prevProps) {\n    console.log('updating')\n    if (this.props.data !== prevProps.data) {\n      this.removeGraph()\n      this.drawGraph(this.props.data)\n    }\n  }\n\n  removeGraph() {\n    console.log('removing old graph')\n    d3.selectAll(\".LineGraph__container > *\").remove();\n  }\n\n  drawGraph(dataObject) {\n\n    // Get data\n    const dataArray = Object.entries(dataObject).slice(1)\n\n    // Set visual dimensions and margin\n\n    const margin = window.innerWidth > 700 ? { top: 50, right: 50, bottom: 50, left: 75 } : { top: 25, right: 25, bottom: 25, left: 35 }\n    const height = window.innerWidth > 700 ? 400 - margin.top - margin.bottom : 400 - margin.top - margin.bottom\n    const width = window.innerWidth > 700 ? 700 - margin.left - margin.right : 350 - margin.left - margin.right\n\n    // D3 - Generate scale and axes\n    const { xScale, yScale } = generateScales(dataArray, 'repositoryCount', height, width)\n    const { xAxis, yAxis } = generateAxes(xScale, yScale)\n\n    // Render SVG container\n    const svg = d3.select(\".LineGraph__container\")\n                  .append(\"svg\")\n                  .attr(\"width\", width + margin.left + margin.right)\n                  .attr(\"height\", height + margin.top + margin.bottom)\n                  // no border for now .style(\"border\", \"solid 1px black\")\n                  .append(\"g\")\n                  .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n                  .attr(\"class\", \"LineGraph__canvas\")\n\n    // Append X and Y axes\n    svg.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .attr(\"class\", \"LineGraph__xAxis\")\n      .call(xAxis)\n    // Rotate x-axis labels so months are all visible\n    .selectAll(\"text\")\n      // .attr(\"y\", 5)\n      // .attr(\"x\", 0)\n      .attr(\"dy\", \".5em\")\n      .attr(\"transform\", \"rotate(315)\")\n      .style(\"text-anchor\", \"end\");\n\n    svg.append(\"g\")\n      .attr(\"transform\", \"translate(0,0)\")\n      .attr(\"class\", \"LineGraph__yAxis\")\n      .call(yAxis)\n\n    // Append Line graph\n    svg.append(\"path\")\n      .datum(dataArray)\n      .attr(\"class\", \"LineGraph__line\")\n      .attr(\"d\", generateLine('repositoryCount', xScale, yScale, monthArray))\n      .style(\"fill\", \"none\")\n      .style(\"stroke\", \"black\")\n\n    // Add scatter points (for tooltip)\n    svg.selectAll('circle')\n      .data(dataArray)\n      .enter()\n      .append('circle')\n      .attr('cy', d => yScale(d[1].repositoryCount))\n      .attr('cx', d => xScale(parseMonth(monthArray, d[0])))\n      .attr('r', 4)\n      .attr('fill', 'black')\n      .on(\"mouseover\", handleMouseOver)\n      .on(\"mouseout\", handleMouseOut);\n\n    // Add y-axis label\n    svg.append('text')\n      .attr('x', -margin.left * 0.5)\n      .attr('y', -margin.top * 0.5)\n      .text('# of new repositories')\n      .style('font-size', 'small')\n\n    // generate tooltip\n    const tootip = d3.select('.LineGraph__container').append('div')\n      .style('position', 'absolute')\n      .style('top', `${0.5 * height}px`)\n      .style('left', `${0.5 * width}px`)\n      .style('border', '1px solid grey')\n      .style('background-color', 'white')\n      .style('opacity', 0)\n      .attr('class', 'LineGraph__tooltip')\n      // .text('test')\n\n\n    function handleMouseOver (d, i) {\n      d3.select(this).style('cursor', 'pointer')\n      d3.select('.LineGraph__tooltip')\n        .style('opacity', 1)\n        .style('top', `${yScale(d[1].repositoryCount) + margin.top}px`)\n        .style('left', `${xScale(parseMonth(monthArray, d[0])) + 2 * margin.left}px`)\n        .style('padding', '0 10px')\n        .html(`\n          <p>Period: ${d[0][0].toUpperCase() + d[0].slice(1, 3)}-${d[0].slice(3, 5)}</p>\n          <p>New Repos: ${d3.format(\",\")(d[1].repositoryCount)}</p>\n        `)\n    }\n\n    function handleMouseOut (d, i) {\n      d3.select('.LineGraph__tooltip')\n        .style('opacity', 0)\n    }\n  }  \n}\n\nexport default LineGraph;\n\n","import React, { Component, Fragment } from 'react';\nimport { Query } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport LineGraph from '../visualisations/LineGraph'\n\n// https://help.github.com/en/articles/searching-for-repositories\n\nclass NewRepos extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fromMonth: 'jan',\n      fromYear: '10',\n      toMonth: 'mar',\n      toYear: '19',\n      language: 'JavaScript',\n      submit: false\n    }\n  }\n\n  handleChangeFromMonth = (event) => {\n    this.setState({ fromMonth: event.target.value })\n  }\n\n  handleChangeFromYear = (event) => {\n    this.setState({ fromYear: event.target.value })\n  }\n\n  handleChangeToMonth = (event) => {\n    this.setState({ toMonth: event.target.value })\n  }\n\n  handleChangeToYear = (event) => {\n    this.setState({ toYear: event.target.value })\n  }\n\n  handleChangeLanguage = (event) => {\n    this.setState({ language: event.target.value })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    this.setState({ submit: true })\n  }\n\n  render() {\n    return (\n      <div className=\"NewRepos__container\">\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            From:\n          <select value={this.state.fromMonth} onChange={this.handleChangeFromMonth}>\n            {monthsWord.map((elem, index) =>\n              <option key={index} value={elem}>\n                {elem}\n              </option>\n            )}\n          </select>\n            <select value={this.state.fromYear} onChange={this.handleChangeFromYear}>\n            {years.map((elem, index) =>\n              <option key={index} value={elem}>\n                {elem}\n              </option>\n            )}\n          </select>\n          </label>\n          <label>\n            To:\n          <select value={this.state.toMonth} onChange={this.handleChangeToMonth}>\n              {monthsWord.map((elem, index) =>\n                <option key={index} value={elem}>\n                  {elem}\n                </option>\n              )}\n            </select>\n            <select value={this.state.toYear} onChange={this.handleChangeToYear}>\n              {years.map((elem, index) =>\n                <option key={index} value={elem}>\n                  {elem}\n                </option>\n              )}\n            </select>\n          </label>\n          <label>\n            Language:\n          <input placeholder=\"Enter desired language\" value={this.state.language} onChange={this.handleChangeLanguage}/>\n          </label>\n          <input type=\"submit\" value=\"Submit\" disabled={!this.props.keyReceived}/>\n        </form>\n        {this.state.submit && <Query\n          query={NEW_REPOS_QUERY(this.state.fromMonth + this.state.fromYear, this.state.toMonth + this.state.toYear, this.state.language)}\n        >\n          {({ loading, error, data }) => {\n            if (loading) return <span>Loading</span>\n            if (error) return <div>Error, please see below. <br />\n              ${error.toString()}</div>\n            console.log(`Operation quota cost: ${data.rateLimit.cost}`)\n            console.log(`Quota remaining: ${data.rateLimit.remaining}`)\n            console.log(`Reset at: ${data.rateLimit.resetAt}`)\n            console.log(Object.entries(data))\n            if (Object.entries(data).length > 1) return <LineGraph data={data} />\n            return null\n          }}\n        </Query>}\n      </div>\n    );\n  }\n}\n\nconst monthsWord = [\n  'jan',\n  'feb',\n  'mar',\n  'apr',\n  'may',\n  'jun',\n  'jul',\n  'aug',\n  'sep',\n  'oct',\n  'nov',\n  'dec'\n]\n\nconst years = ['10', '11', '12', '13', '14', '15', '16', '17', '18', '19',\n]\n\nconst monthsDigit = [\n  '01',\n  '02',\n  '03',\n  '04',\n  '05',\n  '06',\n  '07',\n  '08',\n  '09',\n  '10',\n  '11',\n  '12'\n]\n\nconst NEW_REPOS_QUERY = (from, to, language) => gql`\n  query {\n  rateLimit {\n    cost\n    remaining\n    resetAt\n  \n  }\n  ${generateMonths(from, to, language)}\n}\n`\nconst generateMonths = (from, to, language) => {\n  let output = ``\n  let current = from\n  let limit = 0\n  while (current !== to && limit < 120) {\n    // add node to GQL query\n    output += `${addMonthNode(current.slice(0, 3), `20${current.slice(3)}`, language)}`\n    // increment year if required\n    if (current.slice(0, 3) === 'dec') {\n      current = `jan${parseInt(current.slice(3))+1}`\n    }\n    // otherwise increment month\n    else {\n      current = `${monthsWord[monthsWord.indexOf(current.slice(0, 3)) + 1]}${current.slice(3)}`\n    }\n    limit ++\n  }\n  return output\n}\n\nconst addMonthNode = (month, year, language) =>\n`\n${month}${year.slice(2)}: search (\n    type: REPOSITORY\n    query: \"created:${year}-${monthsDigit[monthsWord.indexOf(month)]} language:${language}\"\n  ) {\n    repositoryCount\n  } \n`\n\nexport default NewRepos;\n","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\n\nclass TreeMap extends Component {\n\n  render() {\n    return <div className=\"TreeMap__container\" style={{ position: 'relative' }}></div>\n  }\n  componentDidMount() {\n    console.log('mounted')\n    if (this.props.data) this.drawGraph(this.props.data)\n  }\n  componentDidUpdate(prevProps) {\n    console.log('updating')\n    if (this.props.data !== prevProps.data) {\n      this.removeGraph()\n      this.drawGraph(this.props.data)\n    }\n  }\n\n  removeGraph() {\n    console.log('removing old graph')\n    d3.selectAll(\".TreeMap__container > *\").remove();\n  }\n\n  drawGraph(dataObject) {\n\n    // Get data\n    const dataArray = Object.entries(dataObject).slice(2)\n                            .map(elem => {\n                              return {\n                                name: elem[0],\n                                value: elem[1].repositoryCount\n                              }\n                            })\n    \n    // Append entry for 'all other' (backing into the result)                            \n    const totalCount = dataObject.ALL.repositoryCount\n    const languageCount = Object.entries(dataObject).reduce((total, elem) => {\n      if (elem[0] !== 'ALL' && elem[0] !== 'rateLimit') return total + elem[1].repositoryCount\n      return total\n    }, 0)\n\n    dataArray.push({\n      name: 'All Other',\n      value: totalCount - languageCount\n    })\n\n    const dataHierarchy = {\n      name: 'Repositories',\n      children: dataArray\n    }\n\n    // Set visual dimensions and margin\n    const margin = window.innerWidth > 700 ? { top: 0, right: 0, bottom: 0, left: 0 } : { top: 10, right: 10, bottom: 10, left: 10 }\n    const height = window.innerWidth > 700 ? 500 - margin.top - margin.bottom : 500 - margin.top - margin.bottom\n    const width = window.innerWidth > 700 ? 700 - margin.left - margin.right : 350 - margin.left - margin.right\n\n    // Set root data for treemap (needs to be ordered) in case of multiple levels\n    const root = d3.hierarchy(dataHierarchy)\n    console.log(root)\n    root.sum((function (d) { return d.value }))\n       .sort(function (a, b) { return b.height - a.height || b.value - a.value; })\n    \n    const treemapLayout = d3.treemap()\n      .size([width, height])\n      .paddingOuter(10)\n      .paddingInner(5);\n\n    treemapLayout(root);\n\n    // Colour Legend\n    const color = d3.scaleOrdinal()\n      .domain(root.leaves().map(function (e) { return e.data.name }))\n      .range(d3.schemePaired);\n\n    // Render SVG container\n    console.log(root.leaves())\n    const svg = d3.select(\".TreeMap__container\")\n      .append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n      // no border for now .style(\"border\", \"solid 1px black\")\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n      .attr(\"class\", \"TreeMap__canvas\")\n\n    // add node  \n    const node = svg.selectAll('g')\n      .data(root.leaves())\n      .enter().append('g')\n      .attr('transform', function (d) {\n        return 'translate(' + [d.x0, d.y0] + ')'\n      })\n      .on(\"mouseover\", handleMouseOver)\n      .on(\"mouseout\", handleMouseOut)\n\n    // add tile shape to node\n    const tile = node.append('rect')\n      .attr('class', 'tile')\n      .attr(\"width\", function (d) { return d.x1 - d.x0; })\n      .attr(\"height\", function (d) { return d.y1 - d.y0; })\n      .attr('fill', function (d) {\n        return color(d.data.name)\n      })\n      .on(\"mouseover\", handleMouseOver)\n      .on(\"mouseout\", handleMouseOut)\n\n    // add text label\n    const label = node.append('text')\n      .attr('dy', '1em')\n      .attr('class', 'label')\n      .text(function (d) { return d.data.name })\n      .on(\"mouseover\", handleMouseOver)\n      .on(\"mouseout\", handleMouseOut)\n\n    // generate tooltip\n    const tootip = d3.select('.TreeMap__container').append('div')\n      .style('position', 'absolute')\n      .style('border', '1px solid grey')\n      .style('background-color', 'white')\n      .style('opacity', 0)\n      .attr('class', 'TreeMap__tooltip')\n\n\n    function handleMouseOver(d, i) {\n      d3.select(this).style('cursor', 'pointer')\n      d3.select('.TreeMap__tooltip')\n        .style(\"left\", (d3.event.pageX + 10) + \"px\")\n        .style(\"top\", (d3.event.pageY - 800) + \"px\")\n        .html(`\n          <p>Language: ${d.data.name}</p>\n          <p>New Repos: ${d.data.value}</p>\n          <p>Proportion: ${d3.format(\".0%\")(d.data.value/totalCount)}</p>\n        `)\n        .style('padding', '0 10px')\n        .transition()\n        .duration(750)\n        .style('opacity', 1)\n        .style('z-index', 100)\n        \n    }\n\n    function handleMouseOut(d, i) {\n      d3.select('.TreeMap__tooltip')\n        .transition()\n        .duration(750)\n        .style('opacity', 0)\n        .style('z-index', -100)\n    }\n  }\n}\n\nexport default TreeMap;\n\n","import React, { Component, Fragment } from 'react';\nimport { Query } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport TreeMap from '../visualisations/TreeMap'\n\n// https://help.github.com/en/articles/searching-for-repositories\n\nclass Languages extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      month: 'jan',\n      year: '2010',\n      submit: false\n    }\n  }\n\n  handleChangeMonth = (event) => {\n    this.setState({ month: event.target.value })\n  }\n\n  handleChangeYear = (event) => {\n    this.setState({ year: `20${event.target.value}` })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    this.setState({ submit: true })\n  }\n\n  render() {\n    return (\n      <div className=\"Languages__container\">\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            Period:\n          <select value={this.state.month} onChange={this.handleChangeMonth}>\n              {monthsWord.map((elem, index) =>\n                <option key={index} value={elem}>\n                  {elem}\n                </option>\n              )}\n            </select>\n            <select value={this.state.year.slice(2)} onChange={this.handleChangeYear}>\n              {years.map((elem, index) =>\n                <option key={index} value={elem}>\n                  {elem}\n                </option>\n              )}\n            </select>\n          </label>\n          <input type=\"submit\" value=\"Submit\" disabled={!this.props.keyReceived}/>\n        </form>\n        {this.state.submit && <Query\n          query={LANGUAGE_REPOS_QUERY(`${this.state.year}-${monthsDigit[monthsWord.indexOf(this.state.month)]}`)}\n        >\n          {({ loading, error, data }) => {\n            if (loading) return <span>Loading</span>\n            if (error) return <div>Error, please see below. <br />\n              ${error.toString()}\n              </div>\n            console.log(`Operation quota cost: ${data.rateLimit.cost}`)\n            console.log(`Quota remaining: ${data.rateLimit.remaining}`)\n            console.log(`Reset at: ${data.rateLimit.resetAt}`)\n            console.log(Object.entries(data))\n            if (Object.entries(data).length > 1) return <TreeMap data={data} />\n            return null\n          }}\n        </Query>}\n      </div>\n    );\n  }\n}\n\nconst monthsWord = [\n  'jan',\n  'feb',\n  'mar',\n  'apr',\n  'may',\n  'jun',\n  'jul',\n  'aug',\n  'sep',\n  'oct',\n  'nov',\n  'dec'\n]\n\nconst years = ['10', '11', '12', '13', '14', '15', '16', '17', '18', '19',\n]\n\nconst monthsDigit = [\n  '01',\n  '02',\n  '03',\n  '04',\n  '05',\n  '06',\n  '07',\n  '08',\n  '09',\n  '10',\n  '11',\n  '12'\n]\n\nconst languages = ['Javascript', 'Java', 'Python', 'CSS', 'PHP', 'Ruby', 'C++', 'C', 'Shell', 'C#', 'HTML', 'Go', 'Typescript',\n'Swift', 'Scala'\n]\n\n// period in format YYYY-MM\nconst LANGUAGE_REPOS_QUERY = (period) => gql`\n  query {\n  rateLimit {\n    cost\n    remaining\n    resetAt\n  }\n  ALL: search (\n    type: REPOSITORY\n    query: \"created:${period}\"\n  ) {\n    repositoryCount\n  }\n  ${languages.reduce((total, elem) => total + addLanguageNode(elem, period), '')}\n  }\n`\n\nconst addLanguageNode = (language, period) => `\n${language.replace('++', 'plusplus').replace('#', 'sharp')}: search (\n    type: REPOSITORY\n    query: \"created:${period} language:${language}\"\n  ) {\n    repositoryCount\n  }\n`\n\nexport default Languages;","import React, { Component, Fragment } from 'react';\nimport { Query } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport '../styles/App.css'\nimport MonthlyNewRepos from './queries/MonthlyNewRepos'\nimport Languages from './queries/Languages';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      keyReceived: false\n    }\n  }\n\n  login() {\n    this.props.auth.login();\n  }\n\n  logout() {\n    this.props.auth.logout();\n  }\n\n  componentDidMount() {\n    const { renewSession } = this.props.auth;\n    if (localStorage.getItem('isLoggedIn') === 'true') {\n      renewSession(authResult => {\n        this.getAPIToken(authResult.idToken, body => {\n          this.props.setToken(body)\n          this.setState({ keyReceived: true })\n        })\n      });\n    }\n    else if (this.props.history.location.hash) this.handleAuthentication(this.props.history)\n  }\n\n  handleAuthentication = ({ location }) => {\n    if (/access_token|id_token|error/.test(location.hash)) {\n      this.props.auth.handleAuthentication(authResult => {\n        this.getAPIToken(authResult.idToken, body => {\n          this.props.setToken(body)\n          this.setState({ keyReceived: true })\n        })\n      })\n    }\n  }\n\n  getAPIToken = (jwt, callback) => {\n    const request = require(\"request\");\n    const options = {\n      method: 'GET',\n      url: 'https://wt-f1d82d610072deeaf794b2ad8e84524c-0.sandbox.auth0-extend.com/authToken',\n      headers: { authorization: `Bearer ${jwt}` },\n    };\n\n    request(options, function (error, response, body) {\n      if (error) throw new Error(error);\n      callback(body)\n    });\n  }\n\n  render() {\n    const { isAuthenticated } = this.props.auth\n    const authCheck = isAuthenticated()\n\n    return (\n      <div className=\"App__container\">\n        <h1>GitHub Data Dashboard</h1>\n        {!authCheck && (\n            <button\n              id=\"qsLoginBtn\"\n              className=\"btn-margin\"\n              onClick={this.login.bind(this)}\n            >\n              Log In To Use The GitHub API\n                  </button>\n        )}\n        {authCheck && <h2>Logged in!</h2>}\n        <h3>Instructions once authorised: for each visualisation, select the desired parameters and click submit to fetch and visualise data</h3>\n        <MonthlyNewRepos keyReceived={this.state.keyReceived} />\n        <Languages keyReceived={this.state.keyReceived} />\n      </div>\n    )\n  }\n}\n\nexport default App\n","import { createBrowserHistory } from 'history'\n\nexport default createBrowserHistory()\n","const AUTH_CONFIG = {\n  domain: 'dev-8-2xd3l4.eu.auth0.com',\n  clientId: 'xvOAhkUjsDBqDfFcPTaiwyf2Cn8gCQ7D',\n}\n\nif (process.env.REACT_APP_CONTEXT === 'localmachine') {\n  AUTH_CONFIG.callbackUrl = 'http://localhost:3000'\n} else AUTH_CONFIG.callbackUrl = 'https://ghstats-arty.herokuapp.com/'\n\nexport default AUTH_CONFIG\n\n\n// https://ghstats-arty.herokuapp.com/\n\n// gh dcab8318b05230785950\n\n// oa xvOAhkUjsDBqDfFcPTaiwyf2Cn8gCQ7D","import history from '../history';\nimport auth0 from 'auth0-js';\nimport AUTH_CONFIG from './auth0-variables';\n\nexport default class Auth {\n  accessToken;\n  idToken;\n  expiresAt;\n\n  auth0 = new auth0.WebAuth({\n    domain: AUTH_CONFIG.domain,\n    clientID: AUTH_CONFIG.clientId,\n    responseType: 'token id_token',\n    redirectUri: AUTH_CONFIG.callbackUrl,\n    scope: 'openid'\n  });\n\n  constructor() {\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleAuthentication = this.handleAuthentication.bind(this);\n    this.isAuthenticated = this.isAuthenticated.bind(this);\n    this.getAccessToken = this.getAccessToken.bind(this);\n    this.getIdToken = this.getIdToken.bind(this);\n    this.renewSession = this.renewSession.bind(this);\n  }\n\n  login() {\n    console.log(auth0.redirectUri)\n    this.auth0.authorize();\n  }\n\n  handleAuthentication(callback) {\n    console.log('calling parse hash')\n    this.auth0.parseHash((err, authResult) => {\n      if (authResult && authResult.accessToken && authResult.idToken) {\n        this.setSession(authResult);\n        callback(authResult)\n      } else if (err) {\n        history.replace('/');\n        console.log(err);\n        alert(`Error: ${err.error}. Check the console for further details.`);\n      }\n    });\n  }\n\n  getAccessToken() {\n    return this.accessToken;\n  }\n\n  getIdToken() {\n    return this.idToken;\n  }\n\n  setSession(authResult) {\n    // Set isLoggedIn flag in localStorage\n    localStorage.setItem('isLoggedIn', 'true');\n\n    // Set the time that the access token will expire at\n    let expiresAt = (authResult.expiresIn * 1000) + new Date().getTime();\n    this.accessToken = authResult.accessToken;\n    this.idToken = authResult.idToken;\n    this.expiresAt = expiresAt;\n\n    // navigate to the home route\n    history.replace('/');\n  }\n\n  renewSession(callback) {\n    this.auth0.checkSession({}, (err, authResult) => {\n       if (authResult && authResult.accessToken && authResult.idToken) {\n         this.setSession(authResult);\n         callback(authResult)\n       } else if (err) {\n         this.logout();\n         console.log(err);\n         alert(`Could not get a new token (${err.error}: ${err.error_description}).`);\n       }\n    });\n  }\n\n  logout() {\n    // Remove tokens and expiry time\n    this.accessToken = null;\n    this.idToken = null;\n    this.expiresAt = 0;\n\n    // Remove isLoggedIn flag from localStorage\n    localStorage.removeItem('isLoggedIn');\n\n    // navigate to the home route\n    history.replace('/');\n  }\n\n  isAuthenticated() {\n    // Check whether the current time is past the\n    // access token's expiry time\n    let expiresAt = this.expiresAt;\n    return new Date().getTime() < expiresAt;\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ApolloProvider } from 'react-apollo';\nimport { ApolloClient } from 'apollo-boost'\nimport { setContext } from 'apollo-link-context';\nimport { createHttpLink } from 'apollo-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport './styles/index.css';\nimport App from './components/App';\nimport Auth from './auth/Auth';\nimport history from './history';\nimport * as serviceWorker from './serviceWorker';\n\nconst auth = new Auth();\n\nconst httpLink = createHttpLink({\n  uri: 'https://api.github.com/graphql',\n})\n\n// let token = process.env.REACT_APP_GHTOKEN\nlet token = null\n\nconst authLink = setContext((_, { headers }) => {\n  // const token = process.env.REACT_APP_GHTOKEN\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    }\n  }\n})\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n})\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App history={history} auth={auth} setToken={(githubAccess) => {\n      token = githubAccess\n    }}/>\n  </ApolloProvider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}